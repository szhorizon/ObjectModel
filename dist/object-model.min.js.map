{"version":3,"file":"object-model.min.js","sources":["../src/helpers.js","../src/object-model.js","../src/list-model.js","../src/array-model.js","../src/function-model.js","../src/map-model.js","../src/set-model.js"],"sourcesContent":["export const\n\tbettertypeof = x => Object.prototype.toString.call(x).match(/\\s([a-zA-Z]+)/)[1],\n\tgetProto = Object.getPrototypeOf,\n\tsetProto = Object.setPrototypeOf,\n\n\thas = (o, prop) => o.hasOwnProperty(prop),\n\tis = (Constructor, obj) => obj instanceof Constructor,\n\tisFunction = f => typeof f === \"function\",\n\tisObject = o => typeof o === \"object\",\n\tisPlainObject = o => o && isObject(o) && getProto(o) === Object.prototype,\n\tisIterable = x => x && isFunction(x[Symbol.iterator]),\n\n\tproxifyFn = (fn, apply) => new Proxy(fn, { apply }),\n\tproxifyModel = (val, model, traps) => new Proxy(val, Object.assign({ getPrototypeOf: () => model.prototype }, traps)),\n\n\tmerge = (target, src = {}) => {\n\t\tfor (let key in src) {\n\t\t\tif (isPlainObject(src[key])) {\n\t\t\t\tlet o = {}\n\t\t\t\tmerge(o, target[key])\n\t\t\t\tmerge(o, src[key])\n\t\t\t\ttarget[key] = o\n\t\t\t} else {\n\t\t\t\ttarget[key] = src[key]\n\t\t\t}\n\t\t}\n\t\treturn target\n\t},\n\n\tdefine = (obj, key, value, enumerable = false) => {\n\t\tObject.defineProperty(obj, key, { value, enumerable, writable: true, configurable: true })\n\t},\n\n\tsetConstructor = (model, constructor) => {\n\t\tsetProto(model, constructor.prototype)\n\t\tdefine(model, \"constructor\", constructor)\n\t},\n\n\textend = (child, parent, props) => {\n\t\tchild.prototype = Object.assign(Object.create(parent.prototype, {\n\t\t\tconstructor: {\n\t\t\t\tvalue: child,\n\t\t\t\twritable: true,\n\t\t\t\tconfigurable: true\n\t\t\t}\n\t\t}), props)\n\t\tsetProto(child, parent)\n\t}","import {\n\tbettertypeof, define, extend, getProto, has, is, isFunction, isObject, isPlainObject,\n\tmerge, proxifyFn, setConstructor\n} from \"./helpers.js\"\n\nexport const\n\t_validate = Symbol(),\n\t_original = Symbol(), // used to bypass proxy\n\n\tMODE_CAST = Symbol(), // used to skip validation at instanciation for perf\n\n\tinitModel = (model, def) => {\n\t\tmodel.definition = def\n\t\tmodel.assertions = [...model.assertions]\n\t\tdefine(model, \"errors\", [])\n\t\tdelete model.name;\n\t},\n\n\textendModel = (child, parent, newProps) => {\n\t\textend(child, parent, newProps)\n\t\tchild.assertions.push(...parent.assertions)\n\t\treturn child\n\t},\n\n\tstackError = (errors, expected, received, path, message) => {\n\t\terrors.push({ expected, received, path, message })\n\t},\n\n\tunstackErrors = (model, errorCollector = model.errorCollector) => {\n\t\tlet nbErrors = model.errors.length\n\t\tif (nbErrors > 0) {\n\t\t\tlet errors = model.errors.map(err => {\n\t\t\t\tif (!err.message) {\n\t\t\t\t\tlet def = [].concat(err.expected)\n\t\t\t\t\terr.message = \"expecting \" + (err.path ? err.path + \" to be \" : \"\") + def.map(d => format(d)).join(\" or \")\n\t\t\t\t\t\t+ \", got \" + (err.received != null ? bettertypeof(err.received) + \" \" : \"\") + format(err.received)\n\t\t\t\t}\n\t\t\t\treturn err\n\t\t\t})\n\t\t\tmodel.errors = []\n\t\t\terrorCollector.call(model, errors) // throw all errors collected\n\t\t}\n\t\treturn nbErrors\n\t},\n\n\tisModelInstance = i => i && is(Model, getProto(i).constructor),\n\n\tparseDefinition = (def) => {\n\t\tif (isPlainObject(def)) {\n\t\t\tObject.keys(def).map(key => { def[key] = parseDefinition(def[key]) })\n\t\t}\n\t\telse if (!Array.isArray(def)) return [def]\n\t\telse if (def.length === 1) return [...def, undefined, null]\n\n\t\treturn def\n\t},\n\n\tformatDefinition = (def, stack) => {\n\t\tlet parts = parseDefinition(def).map(d => format(d, stack));\n\t\treturn parts.length > 1 ? `(${parts.join(\" or \")})` : parts[0]\n\t},\n\n\textendDefinition = (def, newParts = []) => {\n\t\tnewParts = [].concat(newParts)\n\t\tif (newParts.length > 0) {\n\t\t\tdef = newParts\n\t\t\t\t.reduce((def, ext) => def.concat(ext), [].concat(def)) // clone to lose ref\n\t\t\t\t.filter((value, index, self) => self.indexOf(value) === index) // remove duplicates\n\t\t}\n\n\t\treturn def\n\t},\n\n\tcheckDefinition = (obj, def, path, errors, stack, shouldCast) => {\n\t\tlet indexFound = stack.indexOf(def)\n\t\tif (indexFound !== -1 && stack.indexOf(def, indexFound + 1) !== -1)\n\t\t\treturn obj //if found twice in call stack, cycle detected, skip validation\n\n\t\tif (shouldCast) obj = cast(obj, def)\n\n\t\tif (is(Model, def)) {\n\t\t\tobj = def[_validate](obj, path, errors, stack.concat(def))\n\t\t}\n\t\telse if (isPlainObject(def)) {\n\t\t\tObject.keys(def).map(key => {\n\t\t\t\tlet val = obj ? obj[key] : undefined;\n\t\t\t\tlet casted = checkDefinition(val, def[key], formatPath(path, key), errors, stack, shouldCast)\n\t\t\t\tif (shouldCast && obj && casted !== undefined) obj[key] = casted\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tlet pdef = parseDefinition(def)\n\t\t\tif (pdef.some(part => checkDefinitionPart(obj, part, path, stack, shouldCast))) return obj\n\t\t\tstackError(errors, def, obj, path)\n\t\t}\n\n\t\treturn obj\n\t},\n\n\tcheckDefinitionPart = (obj, def, path, stack, shouldCast) => {\n\t\tif (obj == null) return obj === def\n\t\tif (isPlainObject(def) || is(Model, def)) { // object or model as part of union type\n\t\t\tlet errors = []\n\t\t\tcheckDefinition(obj, def, path, errors, stack, shouldCast)\n\t\t\treturn !errors.length\n\t\t}\n\t\tif (is(RegExp, def)) return def.test(obj)\n\t\tif (def === Number || def === Date) return obj.constructor === def && !isNaN(obj)\n\t\treturn obj === def\n\t\t\t|| (isFunction(def) && is(def, obj))\n\t\t\t|| obj.constructor === def\n\t},\n\n\tcheckAssertions = (obj, model, path, errors = model.errors) => {\n\t\tfor (let assertion of model.assertions) {\n\t\t\tlet result\n\t\t\ttry {\n\t\t\t\tresult = assertion.call(model, obj)\n\t\t\t} catch (err) {\n\t\t\t\tresult = err\n\t\t\t}\n\t\t\tif (result !== true) {\n\t\t\t\tlet onFail = isFunction(assertion.description) ? assertion.description : (assertionResult, value) =>\n\t\t\t\t\t`assertion \"${assertion.description}\" returned ${format(assertionResult)} `\n\t\t\t\t\t+ `for ${path ? path + \" =\" : \"value\"} ${format(value)}`\n\t\t\t\tstackError(errors, assertion, obj, path, onFail.call(model, result, obj, path))\n\t\t\t}\n\t\t}\n\t},\n\n\tformat = (obj, stack = []) => {\n\t\tif (stack.length > 15 || stack.includes(obj)) return '...'\n\t\tif (obj === null || obj === undefined) return String(obj)\n\t\tif (typeof obj === \"string\") return `\"${obj}\"`\n\t\tif (is(Model, obj)) return obj.toString(stack)\n\n\t\tstack.unshift(obj)\n\n\t\tif (isFunction(obj)) return obj.name || obj.toString()\n\t\tif (is(Map, obj) || is(Set, obj)) return format([...obj])\n\t\tif (Array.isArray(obj)) return `[${obj.map(item => format(item, stack)).join(', ')}]`\n\t\tif (obj.toString !== Object.prototype.toString) return obj.toString()\n\t\tif (obj && isObject(obj)) {\n\t\t\tlet props = Object.keys(obj),\n\t\t\t\tindent = '\\t'.repeat(stack.length)\n\t\t\treturn `{${props.map(\n\t\t\t\tkey => `\\n${indent + key}: ${format(obj[key], [...stack])}`\n\t\t\t).join(',')} ${props.length ? `\\n${indent.slice(1)}` : ''}}`\n\t\t}\n\n\t\treturn String(obj)\n\t},\n\n\tformatPath = (path, key) => path ? path + '.' + key : key,\n\n\tcontrolMutation = (model, def, path, o, key, privateAccess, applyMutation) => {\n\t\tlet newPath = formatPath(path, key),\n\t\t\tisPrivate = model.conventionForPrivate(key),\n\t\t\tisConstant = model.conventionForConstant(key),\n\t\t\tisOwnProperty = has(o, key),\n\t\t\tinitialPropDescriptor = isOwnProperty && Object.getOwnPropertyDescriptor(o, key)\n\n\t\tif (key in def && ((isPrivate && !privateAccess) || (isConstant && o[key] !== undefined)))\n\t\t\tcannot(`modify ${isPrivate ? \"private\" : \"constant\"} property ${key}`, model)\n\n\t\tlet isInDefinition = has(def, key);\n\t\tif (isInDefinition || !model.sealed) {\n\t\t\tapplyMutation(newPath)\n\t\t\tif (isInDefinition) o[key] = checkDefinition(o[key], def[key], newPath, model.errors, [], true)\n\t\t\tcheckAssertions(o, model, newPath)\n\t\t}\n\t\telse rejectUndeclaredProp(newPath, o[key], model.errors)\n\n\t\tlet nbErrors = model.errors.length\n\t\tif (nbErrors) {\n\t\t\tif (isOwnProperty) Object.defineProperty(o, key, initialPropDescriptor)\n\t\t\telse delete o[key] // back to the initial property defined in prototype chain\n\n\t\t\tunstackErrors(model)\n\t\t}\n\n\t\treturn !nbErrors\n\t},\n\n\tcannot = (msg, model) => {\n\t\tmodel.errors.push({ message: \"cannot \" + msg })\n\t},\n\n\trejectUndeclaredProp = (path, received, errors) => {\n\t\terrors.push({\n\t\t\tpath,\n\t\t\treceived,\n\t\t\tmessage: `property ${path} is not declared in the sealed model definition`\n\t\t})\n\t},\n\n\tcast = (obj, defNode = []) => {\n\t\tif (obj == null || isPlainObject(defNode) || is(BasicModel, defNode) || isModelInstance(obj))\n\t\t\treturn obj // no value or not leaf or already a model instance\n\n\t\tlet def = parseDefinition(defNode),\n\t\t\tsuitableModels = []\n\n\t\tfor (let part of def) {\n\t\t\tif (is(Model, part) && !is(BasicModel, part) && part.test(obj))\n\t\t\t\tsuitableModels.push(part)\n\t\t}\n\n\t\tif (suitableModels.length === 1) {\n\t\t\t// automatically cast to suitable model when explicit (duck typing)\n\t\t\treturn new suitableModels[0](obj, MODE_CAST)\n\t\t}\n\n\t\tif (suitableModels.length > 1)\n\t\t\tconsole.warn(`Ambiguous model for value ${format(obj)}, could be ${suitableModels.join(\" or \")}`)\n\n\t\treturn obj\n\t},\n\n\tcheckUndeclaredProps = (obj, def, errors, path) => {\n\t\tObject.keys(obj).map(key => {\n\t\t\tlet val = obj[key],\n\t\t\t\tsubpath = formatPath(path, key)\n\t\t\tif (!has(def, key)) rejectUndeclaredProp(subpath, val, errors)\n\t\t\telse if (isPlainObject(val)) checkUndeclaredProps(val, def[key], errors, subpath)\n\t\t})\n\t},\n\n\tgetProxy = (model, obj, def, path, privateAccess) => {\n\t\tif (!isPlainObject(def)) return cast(obj, def)\n\n\t\tconst grantPrivateAccess = f => proxifyFn(f, (fn, ctx, args) => {\n\t\t\tprivateAccess = true;\n\t\t\tlet result = Reflect.apply(fn, ctx, args);\n\t\t\tprivateAccess = false;\n\t\t\treturn result\n\t\t})\n\n\t\treturn new Proxy(obj, {\n\n\t\t\tgetPrototypeOf: () => path ? Object.prototype : getProto(obj),\n\n\t\t\tget(o, key) {\n\t\t\t\tif (key === _original) return o\n\n\t\t\t\tif (typeof key !== \"string\") return Reflect.get(o, key)\n\n\t\t\t\tlet newPath = formatPath(path, key),\n\t\t\t\t\tdefPart = def[key];\n\n\t\t\t\tif (!privateAccess && key in def && model.conventionForPrivate(key)) {\n\t\t\t\t\tcannot(`access to private property ${newPath}`, model)\n\t\t\t\t\tunstackErrors(model)\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tif (o[key] && has(o, key) && !isPlainObject(defPart) && !isModelInstance(o[key])) {\n\t\t\t\t\to[key] = cast(o[key], defPart) // cast nested models\n\t\t\t\t}\n\n\t\t\t\tif (isFunction(o[key]) && key !== \"constructor\") {\n\t\t\t\t\treturn grantPrivateAccess(o[key])\n\t\t\t\t}\n\n\t\t\t\tif (isPlainObject(defPart) && !o[key]) {\n\t\t\t\t\to[key] = {} // null-safe traversal\n\t\t\t\t}\n\n\t\t\t\treturn getProxy(model, o[key], defPart, newPath, privateAccess)\n\t\t\t},\n\n\t\t\tset(o, key, val) {\n\t\t\t\treturn controlMutation(model, def, path, o, key, privateAccess,\n\t\t\t\t\tnewPath => Reflect.set(o, key, getProxy(model, val, def[key], newPath))\n\t\t\t\t)\n\t\t\t},\n\n\t\t\tdeleteProperty(o, key) {\n\t\t\t\treturn controlMutation(model, def, path, o, key, privateAccess, () => Reflect.deleteProperty(o, key))\n\t\t\t},\n\n\t\t\tdefineProperty(o, key, args) {\n\t\t\t\treturn controlMutation(model, def, path, o, key, privateAccess, () => Reflect.defineProperty(o, key, args))\n\t\t\t},\n\n\t\t\thas(o, key) {\n\t\t\t\treturn Reflect.has(o, key) && Reflect.has(def, key) && !model.conventionForPrivate(key)\n\t\t\t},\n\n\t\t\townKeys(o) {\n\t\t\t\treturn Reflect.ownKeys(o).filter(key => Reflect.has(def, key) && !model.conventionForPrivate(key))\n\t\t\t},\n\n\t\t\tgetOwnPropertyDescriptor(o, key) {\n\t\t\t\tlet descriptor;\n\t\t\t\tif (!model.conventionForPrivate(key)) {\n\t\t\t\t\tdescriptor = Object.getOwnPropertyDescriptor(def, key);\n\t\t\t\t\tif (descriptor !== undefined) descriptor.value = o[key];\n\t\t\t\t}\n\n\t\t\t\treturn descriptor\n\t\t\t}\n\t\t})\n\t}\n\n\nexport function Model(def, params) {\n\treturn isPlainObject(def) ? new ObjectModel(def, params) : new BasicModel(def)\n}\n\nObject.assign(Model.prototype, {\n\tname: \"Model\",\n\tassertions: [],\n\n\tconventionForConstant: key => key.toUpperCase() === key,\n\tconventionForPrivate: key => key[0] === \"_\",\n\n\ttoString(stack) {\n\t\treturn formatDefinition(this.definition, stack)\n\t},\n\n\tas(name) {\n\t\tdefine(this, \"name\", name);\n\t\treturn this\n\t},\n\n\tdefaultTo(val) {\n\t\tthis.default = val\n\t\treturn this\n\t},\n\n\tvalidate(obj, errorCollector) {\n\t\tthis[_validate](obj, null, this.errors, [])\n\t\treturn !unstackErrors(this, errorCollector)\n\t},\n\n\ttest(obj) {\n\t\tlet model = this;\n\t\twhile (!has(model, \"errorCollector\")) {\n\t\t\tmodel = getProto(model)\n\t\t}\n\n\t\tlet initialErrorCollector = model.errorCollector,\n\t\t\tfailed;\n\n\t\tmodel.errorCollector = () => {\n\t\t\tfailed = true\n\t\t}\n\n\t\tnew this(obj) // may trigger this.errorCollector\n\n\t\tmodel.errorCollector = initialErrorCollector\n\t\treturn !failed\n\t},\n\n\terrorCollector(errors) {\n\t\tlet e = new TypeError(errors.map(e => e.message).join('\\n'))\n\t\te.stack = e.stack.replace(/\\n.*object-model(.|\\n)*object-model.*/, \"\") // blackbox objectmodel in stacktrace\n\t\tthrow e\n\t},\n\n\tassert(assertion, description = format(assertion)) {\n\t\tdefine(assertion, \"description\", description)\n\t\tthis.assertions = this.assertions.concat(assertion)\n\t\treturn this\n\t}\n})\n\n\nexport function BasicModel(def) {\n\tlet model = function (val = model.default) {\n\t\treturn model.validate(val) ? val : undefined\n\t}\n\n\tsetConstructor(model, BasicModel)\n\tinitModel(model, def)\n\treturn model\n}\n\nextend(BasicModel, Model, {\n\t[_validate](obj, path, errors, stack) {\n\t\tcheckDefinition(obj, this.definition, path, errors, stack)\n\t\tcheckAssertions(obj, this, path, errors)\n\t\treturn obj\n\t},\n\n\textend(...newParts) {\n\t\tlet child = extendModel(new BasicModel(extendDefinition(this.definition, newParts)), this)\n\t\tfor (let part of newParts) {\n\t\t\tif (is(BasicModel, part)) child.assertions.push(...part.assertions)\n\t\t}\n\n\t\treturn child\n\t}\n})\n\n\nexport function ObjectModel(def, params) {\n\tlet model = function (obj = model.default, mode) {\n\t\tif (!is(model, this)) return new model(obj)\n\t\tif (is(model, obj)) return obj\n\n\t\tif (!is(Object, obj) && obj !== undefined) {\n\t\t\tstackError(model.errors, Object, obj);\n\t\t}\n\n\t\tif (model.parentClass) merge(obj, new model.parentClass(obj))\n\t\tmerge(this, obj)\n\n\t\tif (mode !== MODE_CAST) {\n\t\t\tmodel[_validate](this, null, model.errors, [], true)\n\t\t\tunstackErrors(model)\n\t\t}\n\n\t\treturn getProxy(model, this, model.definition)\n\t}\n\n\tObject.assign(model, params)\n\textend(model, Object)\n\tsetConstructor(model, ObjectModel)\n\tinitModel(model, def)\n\treturn model\n}\n\nextend(ObjectModel, Model, {\n\tsealed: false,\n\n\tdefaults(p) {\n\t\tObject.assign(this.prototype, p)\n\t\treturn this\n\t},\n\n\ttoString(stack) {\n\t\treturn format(this.definition, stack)\n\t},\n\n\textend(...newParts) {\n\t\tlet definition = Object.assign({}, this.definition),\n\t\t\tproto = Object.assign({}, this.prototype),\n\t\t\tnewAssertions = []\n\n\t\tfor (let part of newParts) {\n\t\t\tif (is(Model, part)) {\n\t\t\t\tmerge(definition, part.definition)\n\t\t\t\tnewAssertions.push(...part.assertions)\n\t\t\t}\n\t\t\tif (isFunction(part)) merge(proto, part.prototype)\n\t\t\tif (isObject(part)) merge(definition, part)\n\t\t}\n\n\t\tlet submodel = extendModel(new ObjectModel(definition), this, proto)\n\t\tsubmodel.assertions = [...this.assertions, ...newAssertions]\n\n\t\tif (getProto(this) !== ObjectModel.prototype) { // extended class\n\t\t\tsubmodel.parentClass = this;\n\t\t}\n\n\t\treturn submodel\n\t},\n\n\t[_validate](obj, path, errors, stack, shouldCast) {\n\t\tif (isObject(obj)) {\n\t\t\tlet def = this.definition\n\t\t\tcheckDefinition(obj[_original] || obj, def, path, errors, stack, shouldCast)\n\t\t\tif (this.sealed) checkUndeclaredProps(obj, def, errors)\n\t\t}\n\t\telse stackError(errors, this, obj, path)\n\n\t\tcheckAssertions(obj, this, path, errors)\n\t\treturn obj\n\t}\n})","import { _original, _validate, MODE_CAST, checkAssertions, checkDefinition, initModel, unstackErrors } from \"./object-model.js\"\nimport { extend, has, isFunction, proxifyFn, proxifyModel, setConstructor } from \"./helpers.js\"\n\nexport const initListModel = (base, constructor, def, init, clone, mutators, otherTraps = {}) => {\n\n\tlet model = function (list = model.default, mode) {\n\t\tlist = init(list)\n\t\tif(mode !== MODE_CAST){\n\t\t\tlist = model[_validate](list, null, model.errors, [], true)\n\t\t\tunstackErrors(model)\n\t\t}\n\n\t\treturn proxifyModel(list, model, Object.assign({\n\t\t\tget(l, key) {\n\t\t\t\tif (key === _original) return l\n\n\t\t\t\tlet val = l[key];\n\t\t\t\treturn isFunction(val) ? proxifyFn(val, (fn, ctx, args) => {\n\t\t\t\t\tif (has(mutators, key)) {\n\t\t\t\t\t\t// indexes of arguments to check def + cast\n\t\t\t\t\t\tlet [begin, end = args.length-1, getArgDef] = mutators[key];\n\t\t\t\t\t\tfor (let i = begin; i <= end; i++) {\n\t\t\t\t\t\t\tlet argDef = getArgDef ? getArgDef(i) : model.definition\n\t\t\t\t\t\t\targs[i] = checkDefinition(args[i], argDef, `${base.name}.${key} arguments[${i}]`, model.errors, [],\ttrue);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(model.assertions.length > 0){\n\t\t\t\t\t\t\tlet testingClone = clone(l)\n\t\t\t\t\t\t\tfn.apply(testingClone, args)\n\t\t\t\t\t\t\tcheckAssertions(testingClone, model, `after ${key} mutation`)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tunstackErrors(model)\n\t\t\t\t\t}\n\n\t\t\t\t\treturn fn.apply(l, args)\n\t\t\t\t}) : val\n\t\t\t}\n\t\t}, otherTraps))\n\t}\n\n\textend(model, base)\n\tsetConstructor(model, constructor)\n\tinitModel(model, def)\n\treturn model\n}","import {\n\t_validate, checkAssertions, checkDefinition, extendDefinition, extendModel,\n\tformatDefinition, Model, stackError, unstackErrors\n} from \"./object-model.js\"\nimport { extend } from \"./helpers.js\"\nimport { initListModel } from \"./list-model.js\";\n\nexport default function ArrayModel(initialDefinition) {\n\tlet model = initListModel(\n\t\tArray,\n\t\tArrayModel,\n\t\tinitialDefinition,\n\t\ta => a,\n\t\ta => [...a],\n\t\t{\n\t\t\t\"copyWithin\": [],\n\t\t\t\"fill\": [0, 0],\n\t\t\t\"pop\": [],\n\t\t\t\"push\": [0],\n\t\t\t\"reverse\": [],\n\t\t\t\"shift\": [],\n\t\t\t\"sort\": [],\n\t\t\t\"splice\": [2],\n\t\t\t\"unshift\": [0]\n\t\t},\n\t\t{\n\t\t\tset(arr, key, val) {\n\t\t\t\treturn setArrayKey(arr, key, val, model)\n\t\t\t},\n\n\t\t\tdeleteProperty(arr, key) {\n\t\t\t\treturn !(key in arr) || setArrayKey(arr, key, undefined, model)\n\t\t\t}\n\t\t}\n\t)\n\n\treturn model\n}\n\nextend(ArrayModel, Model, {\n\ttoString(stack) {\n\t\treturn 'Array of ' + formatDefinition(this.definition, stack)\n\t},\n\n\t[_validate](arr, path, errors, stack, shouldCast) {\n\t\tif (Array.isArray(arr))\n\t\t\tarr = arr.map((a, i) => checkDefinition(a, this.definition, `${path || \"Array\"}[${i}]`, errors, stack, shouldCast))\n\t\telse stackError(errors, this, arr, path)\n\n\t\tcheckAssertions(arr, this, path, errors)\n\t\treturn arr\n\t},\n\n\textend(...newParts) {\n\t\treturn extendModel(new ArrayModel(extendDefinition(this.definition, newParts)), this)\n\t}\n})\n\nlet setArrayKey = (array, key, value, model) => {\n\tlet path = `Array[${key}]`;\n\tif (parseInt(key) >= 0)\n\t\tvalue = checkDefinition(value, model.definition, path, model.errors, [], true)\n\n\tlet testArray = [...array]\n\ttestArray[key] = value\n\tcheckAssertions(testArray, model, path)\n\tlet isSuccess = !unstackErrors(model)\n\tif (isSuccess) array[key] = value\n\treturn isSuccess\n}","import {\n\t_original, _validate, checkAssertions, checkDefinition, extendDefinition, extendModel,\n\tformat, formatDefinition, initModel, Model, stackError, unstackErrors\n} from \"./object-model.js\"\nimport { extend, isFunction, proxifyModel, setConstructor } from \"./helpers.js\"\n\n\nexport default function FunctionModel(...argsDef) {\n\n\tlet model = function (fn = model.default) {\n\t\tif (!model.validate(fn)) return\n\t\treturn proxifyModel(fn, model, {\n\t\t\tget(fn, key) {\n\t\t\t\treturn key === _original ? fn : fn[key]\n\t\t\t},\n\n\t\t\tapply(fn, ctx, args) {\n\t\t\t\tlet def = model.definition\n\n\t\t\t\tdef.arguments.forEach((argDef, i) => {\n\t\t\t\t\targs[i] = checkDefinition(args[i], argDef, `arguments[${i}]`, model.errors, [], true)\n\t\t\t\t})\n\n\t\t\t\tcheckAssertions(args, model, \"arguments\")\n\n\t\t\t\tlet result\n\t\t\t\tif (!model.errors.length) {\n\t\t\t\t\tresult = Reflect.apply(fn, ctx, args)\n\t\t\t\t\tif (\"return\" in def)\n\t\t\t\t\t\tresult = checkDefinition(result, def.return, \"return value\", model.errors, [], true)\n\t\t\t\t}\n\t\t\t\tunstackErrors(model)\n\t\t\t\treturn result\n\t\t\t}\n\t\t});\n\t}\n\n\textend(model, Function)\n\tsetConstructor(model, FunctionModel)\n\tinitModel(model, { arguments: argsDef })\n\n\treturn model\n}\n\nextend(FunctionModel, Model, {\n\ttoString(stack = []) {\n\t\tlet out = `Function(${this.definition.arguments.map(\n\t\t\targDef => formatDefinition(argDef, [...stack])\n\t\t).join(\", \")})`\n\n\t\tif (\"return\" in this.definition) {\n\t\t\tout += \" => \" + formatDefinition(this.definition.return, stack)\n\t\t}\n\t\treturn out\n\t},\n\n\treturn(def) {\n\t\tthis.definition.return = def\n\t\treturn this\n\t},\n\n\textend(newArgs, newReturns) {\n\t\tlet args = this.definition.arguments,\n\t\t\tmixedArgs = newArgs.map((a, i) => extendDefinition(i in args ? args[i] : [], newArgs[i])),\n\t\t\tmixedReturns = extendDefinition(this.definition.return, newReturns)\n\t\treturn extendModel(new FunctionModel(...mixedArgs).return(mixedReturns), this)\n\t},\n\n\t[_validate](f, path, errors) {\n\t\tif (!isFunction(f)) stackError(errors, \"Function\", f, path)\n\t\treturn f\n\t}\n})\n\nFunctionModel.prototype.assert(function numberOfArgs(args) {\n\treturn (args.length > this.definition.arguments.length) ? args : true\n}, function (args) {\n\treturn `expecting ${this.definition.arguments.length} arguments for ${format(this)}, got ${args.length}`\n})","import {\n\t_validate, checkAssertions, checkDefinition, extendDefinition, extendModel,\n\tformat, formatDefinition, Model, stackError\n} from \"./object-model.js\";\nimport { initListModel } from \"./list-model.js\"\nimport { extend, is, isIterable } from \"./helpers.js\"\n\nexport default function MapModel(initialKeyDefinition, initialValueDefinition) {\n\tlet model = initListModel(\n\t\tMap,\n\t\tMapModel,\n\t\t{ key: initialKeyDefinition, value: initialValueDefinition },\n\t\t(it = []) => isIterable(it) ? new Map(it) : it,\n\t\tmap => new Map(map),\n\t\t{\n\t\t\t\"set\": [0, 1, i => i === 0 ? model.definition.key : model.definition.value],\n\t\t\t\"delete\": [],\n\t\t\t\"clear\": []\n\t\t}\n\t)\n\n\treturn model\n}\n\nextend(MapModel, Model, {\n\ttoString(stack) {\n\t\tlet { key, value } = this.definition\n\t\treturn `Map of ${formatDefinition(key, stack)} : ${formatDefinition(value, stack)}`\n\t},\n\n\t[_validate](map, path, errors, stack, shouldCast) {\n\t\tif (is(Map, map)) {\n\t\t\tpath = path || 'Map'\n\t\t\tfor (let [key, val] of map) {\n\t\t\t\tlet ckey = checkDefinition(key, this.definition.key, `${path} key`, errors, stack, shouldCast)\n\t\t\t\tlet cval = checkDefinition(val, this.definition.value, `${path}[${format(key)}]`, errors, stack, shouldCast)\n\t\t\t\tif (shouldCast && (ckey !== key || cval !== val)) {\n\t\t\t\t\tif (ckey !== key) map.delete(key)\n\t\t\t\t\tmap.set(ckey, cval)\n\t\t\t\t}\n\t\t\t}\n\t\t} else stackError(errors, this, map, path)\n\n\t\tcheckAssertions(map, this, path, errors)\n\t\treturn map\n\t},\n\n\textend(keyParts, valueParts) {\n\t\tlet { key, value } = this.definition\n\t\treturn extendModel(new MapModel(\n\t\t\textendDefinition(key, keyParts),\n\t\t\textendDefinition(value, valueParts)\n\t\t), this)\n\t}\n})","import { _validate, checkAssertions, checkDefinition, extendDefinition, extendModel, formatDefinition, Model, stackError } from \"./object-model.js\"\nimport { initListModel } from \"./list-model.js\"\nimport { extend, is, isIterable } from \"./helpers.js\"\n\nexport default function SetModel(initialDefinition) {\n\tlet model = initListModel(\n\t\tSet,\n\t\tSetModel,\n\t\tinitialDefinition,\n\t\tit => isIterable(it) ? new Set([...it]) : it,\n\t\tset => new Set(set),\n\t\t{\n\t\t\t\"add\": [0, 0],\n\t\t\t\"delete\": [],\n\t\t\t\"clear\": []\n\t\t}\n\t)\n\n\treturn model\n}\n\nextend(SetModel, Model, {\n\ttoString(stack) {\n\t\treturn \"Set of \" + formatDefinition(this.definition, stack)\n\t},\n\n\t[_validate](set, path, errors, stack, shouldCast) {\n\t\tif (is(Set, set)) {\n\t\t\tfor (let item of set.values()) {\n\t\t\t\tlet casted = checkDefinition(item, this.definition, `${path || \"Set\"} value`, errors, stack, shouldCast)\n\t\t\t\tif (shouldCast && casted !== item) {\n\t\t\t\t\tset.delete(item)\n\t\t\t\t\tset.add(casted)\n\t\t\t\t}\n\t\t\t}\n\t\t} else stackError(errors, this, set, path)\n\t\tcheckAssertions(set, this, path, errors)\n\t\treturn set\n\t},\n\n\textend(...newParts) {\n\t\treturn extendModel(new SetModel(extendDefinition(this.definition, newParts)), this)\n\t}\n})"],"names":["getProto","Object","getPrototypeOf","setProto","setPrototypeOf","has","o","prop","hasOwnProperty","is","Constructor","obj","isFunction","f","isObject","isPlainObject","prototype","isIterable","x","Symbol","iterator","proxifyFn","fn","apply","Proxy","proxifyModel","val","model","traps","assign","merge","target","src","key","define","value","enumerable","defineProperty","writable","configurable","setConstructor","constructor","extend","child","parent","props","create","_validate","_original","MODE_CAST","initModel","def","definition","assertions","name","extendModel","newProps","push","stackError","errors","expected","received","path","message","unstackErrors","errorCollector","nbErrors","length","map","err","concat","d","format","join","toString","call","match","bettertypeof","isModelInstance","i","Model","parseDefinition","keys","Array","isArray","undefined","formatDefinition","stack","parts","extendDefinition","newParts","reduce","ext","filter","index","self","indexOf","checkDefinition","shouldCast","indexFound","cast","casted","formatPath","some","part","checkDefinitionPart","RegExp","test","Number","Date","isNaN","checkAssertions","assertion","result","onFail","description","assertionResult","includes","String","unshift","Map","Set","item","indent","repeat","slice","controlMutation","privateAccess","applyMutation","newPath","isPrivate","conventionForPrivate","isConstant","conventionForConstant","isOwnProperty","initialPropDescriptor","getOwnPropertyDescriptor","cannot","isInDefinition","sealed","rejectUndeclaredProp","msg","defNode","BasicModel","suitableModels","console","warn","checkUndeclaredProps","subpath","getProxy","[object Object]","Reflect","get","defPart","ctx","args","grantPrivateAccess","set","deleteProperty","ownKeys","descriptor","params","ObjectModel","default","validate","mode","this","parentClass","toUpperCase","failed","initialErrorCollector","e","TypeError","replace","p","proto","newAssertions","submodel","initListModel","base","init","clone","mutators","otherTraps","list","l","begin","end","getArgDef","argDef","testingClone","ArrayModel","initialDefinition","a","copyWithin","fill","pop","reverse","shift","sort","splice","arr","setArrayKey","array","parseInt","testArray","isSuccess","FunctionModel","argsDef","arguments","forEach","return","Function","MapModel","initialKeyDefinition","initialValueDefinition","it","delete","clear","SetModel","add","out","newArgs","newReturns","mixedArgs","mixedReturns","assert","ckey","cval","keyParts","valueParts","values"],"mappings":"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"}